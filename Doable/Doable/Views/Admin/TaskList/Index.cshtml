@model IEnumerable<Doable.Models.Tasklist>
@{
    ViewData["Title"] = "Tasklist";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="d-flex justify-content-between mb-3">
    <div>
        <h1><a asp-action="Create" class="btn btn-primary">+ Create Task</a></h1>
    </div>
    <div class="d-flex">
        <form id="searchForm" asp-controller="TaskList" asp-action="Index" method="get" class="form-inline">
            <input type="text" name="searchString" id="searchInput" class="form-control mr-2" placeholder="Search tasks..." value="@ViewData["CurrentFilter"]" />
        </form>
    </div>
</div>

<div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
    <table class="table table-fixed">
        <thead>
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Assigned To</th>
                <th>Priority</th>
                <th>Status</th>
                <th>Created Date</th>
                <th>Deadline</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Title</td>
                    <td class="description-column">@item.Description</td>
                    <td>@item.AssignedTo</td>
                    <td>@item.Priority</td>
                    <td>@item.Status</td>
                    <td>@item.CreatedDate</td>
                    <td>@item.Deadline</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
            
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        // Debounce function to limit the rate at which a function can fire.
        function debounce(func, wait) {
            let timeout;
            return function () {
                const context = this, args = arguments;
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(context, args), wait);
            };
        }

        // Function to submit the form
        function submitForm() {
            document.getElementById('searchForm').submit();
        }

        // Adding keyup event listener to the search input with debounce
        document.getElementById('searchInput').addEventListener('keyup', debounce(submitForm, 500));
    </script>
}

<style>
    .table-fixed thead th {
        position: sticky;
        top: 0;
        z-index: 1;
        background-color: white; /* Optional: Add background color to the header */
    }

    .description-column {
        max-width: 200px; /* Set your desired max width here */
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>
