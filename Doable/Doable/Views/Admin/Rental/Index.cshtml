@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewData["Title"] = "Bookings";
    var bookings = ViewData["Bookings"] as List<Doable.Models.Booking>;
    var currentPage = (int)ViewData["CurrentPage"];
    var totalPages = (int)ViewData["TotalPages"];
}

<br />
<br />
<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <a asp-action="Create" asp-controller="Rental" class="btn btn-primary">+ New Booking</a>
    </div>
    <div class="d-flex">
        <form id="searchForm" asp-controller="Rental" asp-action="Index" method="get" class="form-inline">
            <input type="text" name="searchString" id="searchInput" class="form-control mr-2" placeholder="Search Bookings..." value="@ViewData["CurrentFilter"]" />
        </form>
    </div>
</div>
<br />

<div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
    <table class="table table-fixed">
        <thead>
            <tr>
                <th>ID</th>
                <th class="customer-email-column">Customer Email</th>
                <th class="service-type-column">Service Type</th>
                <th>Service Date From</th>
                <th>Service Date To</th>
                <th class="status-column">Status</th>
                <th class="payment-column">Payment</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in bookings)
            {
                <tr>
                    <td>@item.ID</td>
                    <td class="customer-email-column">@item.CustomerEmail</td>
                    <td class="service-type-column">@item.ServiceType</td>
                    <td>@item.ServiceDateFrom</td>
                    <td>@item.ServiceDateTo</td>
                    <td class="status-column">@item.Status</td>
                    <td class="payment-column">@item.Payment</td>
                    <td>
                        <a asp-action="Edit" asp-controller="Rental" asp-route-id="@item.ID" class="btn btn-sm btn-warning">Edit</a> |
                        <a asp-action="Delete" asp-controller="Rental" asp-route-id="@item.ID" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-controller="Rental" asp-route-pageNumber="@(currentPage - 1)" asp-route-searchString="@ViewData["CurrentFilter"]">Previous</a>
            </li>
        }
        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(currentPage == i ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-controller="Rental" asp-route-pageNumber="@i" asp-route-searchString="@ViewData["CurrentFilter"]">@i</a>
            </li>
        }
        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-controller="Rental" asp-route-pageNumber="@(currentPage + 1)" asp-route-searchString="@ViewData["CurrentFilter"]">Next</a>
            </li>
        }
    </ul>
</nav>

@section Scripts {
    <script>
        // Debounce function to limit the rate at which a function can fire.
        function debounce(func, wait) {
            let timeout;
            return function () {
                const context = this, args = arguments;
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(context, args), wait);
            };
        }

        // Function to submit the form
        function submitForm() {
            document.getElementById('searchForm').submit();
        }

        // Adding keyup event listener to the search input with debounce
        document.getElementById('searchInput').addEventListener('keyup', debounce(submitForm, 500));
    </script>
}

<style>
    .table-fixed thead th {
        position: sticky;
        top: 0;
        z-index: 1;
        background-color: white; /* Optional: Add background color to the header */
    }

    .customer-email-column, .service-type-column, .status-column, .payment-column {
        max-width: 100px; /* Adjust the max-width as needed */
        min-width: 100px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>
